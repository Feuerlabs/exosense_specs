submodule exodm_device_type {
  belongs-to "exodm" {
    prefix exodm;
  }

  import exodm_type {
    prefix exodm_type;
  }


  description "API for Exosense Device Management Server, device type part";


  contact "ulf.wiger@feuerlabs.com";
  organization "Feuerlabs, Inc.";

    
  grouping device-type-obj {
    description "Device type object leafs";
    leaf name {
      description "Account-wide unique device type name";
      mandatory true;
      type exodm_type:id-string;
    }
    leaf protocol {
      description "Protocol between device and Exosense server";
      mandatory true;
      type exodm_type:id-string;
    }
  }



  rpc create-device-type {
    description "RPC to create a device type";

    input {
      leaf account {
        description "The account to which the yang module belongs.";
        type exodm_type:id-string;
      }
      uses device-type-obj;
    }

    output {
      leaf result {
        type exodm_type:result-code;
      }
    }
  }

  rpc update-device-type {
    description "RPC to modify an existing device type.";
    input {
      leaf account {
        description "The account to which the yang module belongs.";
        type exodm_type:id-string;
      }
      uses device-type-obj {
        refine protocol {
          mandatory false;
        }
      }
    }
    output {
      leaf result {
        type exodm_type:result-code;
      }
    }
  }

  rpc delete-device-type {
    description "RPC to create a device type";

    input {
      leaf account {
        description "The account to which the yang module belongs.";
        type exodm_type:id-string;
      }
      leaf name {
        description "Device type name";
        type exodm_type:id-string;
      }
    }

    output {
      leaf result {
        type exodm_type:result-code;
      }
    }
  }

  rpc list-device-types {
    description "RPC to list device types.";
    input {
      leaf account {
        description "The account to which the yang module belongs.";
        type exodm_type:id-string;
      }
      leaf n {
        description "Number of entries to fetch";
        type uint32;
      }
      leaf previous {
        description 'Previous device type; "" if from beginning';
        type exodm_type:id-string;
      }
    }
    output {
      list device-types {
        uses device-type-obj;
      }
    }
  }

  rpc list-device-type-members {
    description "List device IDs associated with a device type";
    input {
      leaf account {
        description "The account to which the yang module belongs.";
        type exodm_type:id-string;
      }
      leaf name {
        description "Name of device type";
        type exodm_type:id-string;
      }
      leaf n {
        description "Number of entries to fetch";
        type uint32;
      }
      leaf previous {
        description 'Previous device ID; "" if from beginning';
        type exodm_type:id-string;
      }
    }
    output {
      leaf-list device-type-members {
        description "Device ID";
        type exodm_type:id-string;
      }
    }
  }
}

